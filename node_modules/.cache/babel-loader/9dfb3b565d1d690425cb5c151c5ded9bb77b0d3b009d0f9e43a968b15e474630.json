{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masat\\\\mlm-system\\\\src\\\\components\\\\Auth\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// src/components/Auth/PrivateRoute.js\nimport { Navigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { supabase } from '../../utils/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    // 現在のセッションを取得\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      setSession(session);\n      setLoading(false);\n    });\n\n    // セッションの変更を監視\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // ローディング中はnullを返す\n  if (loading) {\n    return null; // またはローディングスピナーなどを表示\n  }\n\n  // セッションがない場合はログインページにリダイレクト\n  if (!session) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 認証済みの場合は子コンポーネントを表示\n  return children;\n};\n_s(PrivateRoute, \"1S/XIXlAlu2MOFi6F4P+Zx1+LS8=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","useEffect","useState","supabase","jsxDEV","_jsxDEV","PrivateRoute","children","_s","loading","setLoading","session","setSession","auth","getSession","then","data","subscription","onAuthStateChange","_event","unsubscribe","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/masat/mlm-system/src/components/Auth/PrivateRoute.js"],"sourcesContent":["// src/components/Auth/PrivateRoute.js\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '../../utils/supabaseClient';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [session, setSession] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // 現在のセッションを取得\r\n        supabase.auth.getSession().then(({ data: { session } }) => {\r\n            setSession(session);\r\n            setLoading(false);\r\n        });\r\n\r\n        // セッションの変更を監視\r\n        const {\r\n            data: { subscription },\r\n        } = supabase.auth.onAuthStateChange((_event, session) => {\r\n            setSession(session);\r\n            setLoading(false);\r\n        });\r\n\r\n        return () => subscription.unsubscribe();\r\n    }, []);\r\n\r\n    // ローディング中はnullを返す\r\n    if (loading) {\r\n        return null; // またはローディングスピナーなどを表示\r\n    }\r\n\r\n    // セッションがない場合はログインページにリダイレクト\r\n    if (!session) {\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    // 認証済みの場合は子コンポーネントを表示\r\n    return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACAE,QAAQ,CAACU,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,IAAI,EAAE;QAAEL;MAAQ;IAAE,CAAC,KAAK;MACvDC,UAAU,CAACD,OAAO,CAAC;MACnBD,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;;IAEF;IACA,MAAM;MACFM,IAAI,EAAE;QAAEC;MAAa;IACzB,CAAC,GAAGd,QAAQ,CAACU,IAAI,CAACK,iBAAiB,CAAC,CAACC,MAAM,EAAER,OAAO,KAAK;MACrDC,UAAU,CAACD,OAAO,CAAC;MACnBD,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,MAAMO,YAAY,CAACG,WAAW,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIX,OAAO,EAAE;IACT,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA;EACA,IAAI,CAACE,OAAO,EAAE;IACV,oBAAON,OAAA,CAACL,QAAQ;MAACqB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtC;;EAEA;EACA,OAAOnB,QAAQ;AACnB,CAAC;AAACC,EAAA,CAlCIF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}