{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masat\\\\mlm-system\\\\src\\\\components\\\\Auth\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../../utils/supabaseClient';\nimport { Box, TextField, Button, Typography, Container, Card, CardContent, Link } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      const {\n        error\n      } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/update-password`\n      });\n      if (error) throw error;\n      setMessage('パスワードリセットの手順をメールで送信しました。');\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            align: \"center\",\n            children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u30EA\\u30BB\\u30C3\\u30C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), message ? /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            align: \"center\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSubmit,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n              name: \"email\",\n              autoComplete: \"email\",\n              autoFocus: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              disabled: loading,\n              children: loading ? '送信中...' : 'リセットリンクを送信'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/\",\n                variant: \"body2\",\n                children: \"\\u30ED\\u30B0\\u30A4\\u30F3\\u753B\\u9762\\u306B\\u623B\\u308B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"EeitbQaQ2Uari12IVOajsjpKUz4=\");\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","supabase","Box","TextField","Button","Typography","Container","Card","CardContent","Link","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","loading","setLoading","message","setMessage","handleSubmit","e","preventDefault","error","auth","resetPasswordForEmail","redirectTo","window","location","origin","alert","maxWidth","children","sx","mt","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","noValidate","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","type","mb","disabled","textAlign","href","_c","$RefreshReg$"],"sources":["C:/Users/masat/mlm-system/src/components/Auth/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { supabase } from '../../utils/supabaseClient';\r\nimport { Box, TextField, Button, Typography, Container, Card, CardContent, Link } from '@mui/material';\r\n\r\nexport default function ResetPassword() {\r\n    const [email, setEmail] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setLoading(true);\r\n            const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n                redirectTo: `${window.location.origin}/update-password`,\r\n            });\r\n\r\n            if (error) throw error;\r\n            setMessage('パスワードリセットの手順をメールで送信しました。');\r\n        } catch (error) {\r\n            alert(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Box sx={{ mt: 8 }}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n                            パスワードをリセット\r\n                        </Typography>\r\n                        {message ? (\r\n                            <Typography color=\"primary\" align=\"center\">\r\n                                {message}\r\n                            </Typography>\r\n                        ) : (\r\n                            <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n                                <TextField\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"メールアドレス\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    sx={{ mt: 3, mb: 2 }}\r\n                                    disabled={loading}\r\n                                >\r\n                                    {loading ? '送信中...' : 'リセットリンクを送信'}\r\n                                </Button>\r\n                                <Box sx={{ textAlign: 'center' }}>\r\n                                    <Link href=\"/\" variant=\"body2\">\r\n                                        ログイン画面に戻る\r\n                                    </Link>\r\n                                </Box>\r\n                            </Box>\r\n                        )}\r\n                    </CardContent>\r\n                </Card>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}