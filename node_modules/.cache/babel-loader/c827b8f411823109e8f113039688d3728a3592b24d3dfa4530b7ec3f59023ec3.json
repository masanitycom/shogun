{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masat\\\\mlm-system\\\\src\\\\components\\\\Dashboard\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { supabase } from '../../utils/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminDashboard() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getUsers();\n    // リアルタイム更新のサブスクリプション設定\n    const subscription = supabase.channel('public:profiles').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'profiles'\n    }, payload => {\n      getUsers(); // ユーザーリストを再取得\n    }).subscribe();\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  async function getUsers() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('profiles').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setUsers(data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"\\u7BA1\\u7406\\u753B\\u9762\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u30E6\\u30FC\\u30B6\\u30FCID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u6A29\\u9650\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u767B\\u9332\\u65E5\\u6642\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: user.user_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: user.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: new Date(user.created_at).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminDashboard, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Box","Container","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","supabase","jsxDEV","_jsxDEV","AdminDashboard","_s","users","setUsers","getUsers","subscription","channel","on","event","schema","table","payload","subscribe","unsubscribe","data","error","from","select","order","ascending","console","children","sx","mt","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","user","user_id","email","role","Date","created_at","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/masat/mlm-system/src/components/Dashboard/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n    Typography,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from '@mui/material';\r\nimport { supabase } from '../../utils/supabaseClient';\r\n\r\nexport default function AdminDashboard() {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        // リアルタイム更新のサブスクリプション設定\r\n        const subscription = supabase\r\n            .channel('public:profiles')\r\n            .on('postgres_changes',\r\n                {\r\n                    event: '*',\r\n                    schema: 'public',\r\n                    table: 'profiles'\r\n                },\r\n                payload => {\r\n                    getUsers(); // ユーザーリストを再取得\r\n                }\r\n            )\r\n            .subscribe();\r\n\r\n        return () => {\r\n            subscription.unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    async function getUsers() {\r\n        try {\r\n            const { data, error } = await supabase\r\n                .from('profiles')\r\n                .select('*')\r\n                .order('created_at', { ascending: false });\r\n\r\n            if (error) throw error;\r\n            setUsers(data);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Box sx={{ mt: 4 }}>\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                    管理画面\r\n                </Typography>\r\n                <Paper sx={{ mt: 2 }}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>ユーザーID</TableCell>\r\n                                    <TableCell>メールアドレス</TableCell>\r\n                                    <TableCell>権限</TableCell>\r\n                                    <TableCell>登録日時</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {users.map((user) => (\r\n                                    <TableRow key={user.id}>\r\n                                        <TableCell>{user.user_id}</TableCell>\r\n                                        <TableCell>{user.email}</TableCell>\r\n                                        <TableCell>{user.role}</TableCell>\r\n                                        <TableCell>\r\n                                            {new Date(user.created_at).toLocaleString()}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}